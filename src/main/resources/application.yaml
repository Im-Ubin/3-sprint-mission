spring:
  application:
    name: discodeit
#  boot:
#    admin:
#      client:
#        instance:
#          name: discodeit
  servlet:
    multipart:
      maxFileSize: 10MB
      maxRequestSize: 30MB
  jpa:
    show-sql: true
    open-in-view: false
    properties:
      hibernate:
        ddl-auto: validate
        format_sql: true
        highlight_sql: true
        use_sql_comments: true

logging:
  level:
    org.hibernate.SQL: info
    org.hibernate.orm.jdbc.bind: trace

discodeit:
  storage:
    type: ${STORAGE_TYPE:local}  # local | s3 (기본값: local)
    local:
      root-path: ${STORAGE_LOCAL_ROOT_PATH:.discodeit/storage}
    s3:
      access-key: ${AWS_S3_ACCESS_KEY}
      secret-key: ${AWS_S3_SECRET_KEY}
      region: ${AWS_S3_REGION}
      bucket: ${AWS_S3_BUCKET}
      presigned-url-expiration: ${AWS_S3_PRESIGNED_URL_EXPIRATION:600} # (기본값: 10분)

management:
  endpoints:
    web:
      exposure:
        include:
          - health
          - info
          - metrics
          - loggers
          - env
  endpoint:
    health:
      show-details: always
      show-components: always
  info:
    env:
      enabled: true

info:
  app:
    name: Discodeit
    version: 1.7.0
  java:
    version: ${java.version}
  spring-boot:
    version: 3.4.4
  datasource:
    url: ${spring.datasource.url}
    driver: ${spring.datasource.driver-class-name}
  jpa:
    ddl-auto: ${spring.jpa.properties.hibernate.ddl-auto}
  storage:
    type: ${discodeit.storage.type}
    path: ${discodeit.storage.local.root-path}
  multipart:
    max-file-size: ${spring.servlet.multipart.maxFileSize}
    max-request-size: ${spring.servlet.multipart.maxRequestSize}